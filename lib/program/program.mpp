module;

#include <coroutine>

export module miller.program;
export import :operation;

import miller.coro;

namespace mi {

    export struct [[nodiscard]] program {
        constexpr label entry() const noexcept { return {}; }
        constexpr label exit()  const noexcept { return {}; }
        constexpr bool escape() const noexcept { return false; }

        coro::generator< label > breaks_to() const noexcept { co_yield {}; }
        coro::generator< label > breaks_of() const noexcept { co_yield {}; }
        coro::generator< label > internal_labels() const noexcept { co_yield {}; }
        coro::generator< label > labels() const noexcept { co_yield {}; }
        coro::generator< label > reachable_labels() const noexcept { co_yield {}; }
    };

    static_assert( operation< program > );

} // namespace mi

